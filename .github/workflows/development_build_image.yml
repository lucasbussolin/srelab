name: Build development image
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build_release_image:
    name: Build and release docker image
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: arn:aws:iam::237533616493:role/github
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . -t "$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "$ECR_REPOSITORY:$IMAGE_TAG"
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$ECR_REPOSITORY:$IMAGE_TAG"

  deploy_service:
    name: Deploy Service
    needs: build_release_image
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: arn:aws:iam::237533616493:role/github
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Mount task-definition file
        working-directory: .aws/dev
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          IMAGE_TAG: ${{ github.sha }}
          RDS_METABASE_USER: ${{ secrets.RDS_METABASE_USER }}
          RDS_METABASE_PASSWORD: ${{ secrets.RDS_METABASE_PASSWORD }}
          RDS_METABASE_HOST: ${{ secrets.RDS_METABASE_HOST }}
        run: envsubst < template.json > task-definition.json

      - name: Render Amazon ECS task definition
        id: render-metabase-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .aws/dev/task-definition.json
          container-name: metabase
          image: ${{ secrets.ECR_REPO }}:${{ github.sha }}
          environment-variables: "LOG_LEVEL=info"

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-metabase-container.outputs.task-definition }}
          service: metabase-1
          cluster: devtest